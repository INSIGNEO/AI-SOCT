// contacting info 
title = "Configuration File for auto_segm version 0.1 ";
author= "Michail Mamalakis";
email= "mmamalakis1@sheffield.ac.uk";
license= "all right reserved";
// functionallity of code


init_segment_data=true;
atlas=true;
deeplearning=false;
segment_data=false;
evaluate_results=false;
interpolate_3D=false;
deformation=false;
sensitivity=false;
translation=false;


// initial segmentation part
translation_space =
{
general={	    
		initial_image_space="LGE"; // .format of the initial translation space image
		final_image_space="cine"; //.format of the final translation space image
	};

paths={
		trans_python_script="./Initial_Segmentation/scripts_translation/"; //path where the scripts of GAN networks are.	    
		store_path="./Initial_Segmentation/data_internal/Input/image_ES_trans/image/"; // path to store the translation images	    
	   	     
	};


};

// initial segmentation part
initial_segmentation =
{
	general={	     heart_phase="ED"; //ES endsystolic or ED enddiastolic or BT for both comparizon
	};

	atlas={

		     data_path ="./DATA/LGE_test/atlas_LGE/"; // path where the dataset images excist
		     landmarks_path="./DATA/LGE_test/atlas_LGE/";  // path where the 5 landmarks atlases excist
		     type_of_input_data="nii"; //dcm or nii or jpg

		     
	};

	deeplearning={
		     store_data_path ="./Data/ES/MAIN/test/"; // path to store the results dl images
		     configuration_file="./Initial_Segmentation/scripts/Configuration_file/";  //path where the config of DL networks are (auto_segm python software).
		     python_script="./Initial_Segmentation/scripts/"; //path where the scripts of DL networks are.
		     num_classes=2; //number of prediction classes of DL network.
	};


};

// segmentation part

segmentation =
{
general = { segmentation_case="both";
	     //type_of_input_data="dcm"; //dcm of nii
};
paths = {
	     myofolder_path  = "/data_internal/myo_LGE_ES25b/"; //path where the myo images excist 
	     ROIfolder_path  = "/data_internal/ROI_LGE_ES25b/"; //path where the ROI images excist
	     store_scars_results_path ="/DATA/Results/LGE_v25b/"; //path to store the scar results images
patient_folders=["1","2", "3","4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17","18", "19", "20" ];  //folders names
	     number_of_images = [7,  8, 8, 6, 7, 8, 7, 8, 6, 8, 7, 8, 7, 9, 6, 6, 7, 7, 9, 7]; //number of images per folder
	};
parameter = { 

	     segm_border_zone_bool=true;   //do you want to segmenta the bprder zoen? true/false
	     threshold_of_scar_intensity=45; //which is the intensity threshold where the code does not search for scars 
};


};
// sevaluation matrices
evaluation=
{
general = { number_of_experts=3; //number of expert to create the GT
};
paths = {
	     copy_from_store_scar_result=true; //copy the resuts from the variable of the segmentation:: store_scars_results_path above deterination

	     manual_labels_path  = ".DATA/Results/manual/intra/all/"; //the path of manual labels
	     predict_labels_path  = "./DATA/Results/predict/new/v25b/"; // the path to store the scars results if the copy_from_store_scar_result is true or the path that the scars results are stored
patient_folders=["1","2", "3","4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17","18", "19", "20" ];  //folders names
	     number_of_images =  [7,  8, 8, 6, 7, 8, 7, 8, 6, 8, 7, 8, 7, 9, 6, 6, 7, 7, 9, 7];   //number of images per folder
	     store_results_metric = "./DATA/Results/metric/";  //store a txt file with all the metrics results
	};

parameter = { 

	     rotation_pred_mask=-90.0;
	     scale_pred_mask=0.5;
	     center_pred_mask=[256, 256];
};




};
// interpolation of 2D slices to create a 3D shape model
interpolation_3D={
paths = {    slice3D_manual_data=false;
	     manual_3Dlabel_path  = "/CODE_generalization/manual/3D/";
	     manual_labels_path  = "./DATA/Results/manual/";

	     interpolate_2d_to_3D_predict_data=true;
 	     store_scars_results_path ="./DATA/Results/3D/";
patient_folders=["1","2", "3","4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17","18", "19", "20" ]; 
	     number_of_images =  [8, 9, 8, 9, 8, 10, 7, 7, 8, 8, 10, 9, 8, 9, 7, 8, 9, 8, 9, 7]; 

	};

parameter = { 

	     visualize_3D_scars=false; //do you want to visualize each patient scar 3D model?
	     visualize_3D_epi=false;  //do you want to visualize each patient epicardium 3D model?
	     visualize_3D_endo=false; //do you want to visualize each patient endocardium 3D model?
	     gap_of_mri=5; //slice gap of 3D MRI usually 5mm
	     alpha_vtkDelaunay3D=3.5; //fix parameter of interpolation method

};

};

//future work... Deformation and motion capture from ES to ED phase of heart pace
Deformation={

general2={

		deeplearning=true;

	};

paths = {   
	     image_move  = "/CODE_generalization/data_internal/Input/image_ED_dl/image/";
	     image_fix  = "/CODE_generalization/data_internal/Input/image_ES_dl/image/";

	     store_path = "Desktop/test_test/";

	};


};


// Sensitivity code of the AI-SOCT parameters change
Sensitivity={

general={

		parameters=[true,true,true,true,true]; //endo_rate, epi_rate, kmean_portion, rgmm_portion, rgmm-kmean_portion
		lower_border=[0.5, 0.5, 0.25, 0.25, 0.25];
		higher_border=[2.5, 2.5, 1.0, 1.0, 1.0];
		initial_SD=[0.25, 0.25, 0.1, 0.1, 0.1];
		sensitivity_mode="LC"; //GL for global LC for local
	};

paths = {   	     
	        store_path_results = "/home/michail/Desktop/test_sens/";

	};


};





